<ruleset comparisonMethod="maven"
         xmlns="http://mojo.codehaus.org/versions-maven-plugin/rule/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://mojo.codehaus.org/versions-maven-plugin/rule/2.0.0 https://www.mojohaus.org/versions-maven-plugin/xsd/rule-2.0.0.xsd">
  <rules>
    <rule groupId="antlr" artifactId="antlr" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">20030911</ignoreVersion>
        <ignoreVersion>3.0b5</ignoreVersion>
        <ignoreVersion>3.0ea8</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="args4j" artifactId="args4j" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 2.37, Args4j requires Java 11.
        We cannot upgrade past 2.33 while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!2\.33).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="ch.qos.logback" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
        <!--
        As of version 1.4.0, Logback requires Java 11.
        We cannot upgrade past 1.3.x while we still support Java 8.
        Note: logback-classic 1.2.13 is the last version to use SLF4J v1;
        logback-classic 1.3.0+ uses SLF4J v2, which works differently; see:
        https://www.slf4j.org/faq.html#changesInVersion200
        -->
        <ignoreVersion type="regex">^(?!1\.3\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.fasterxml.jackson.core" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.google.guava" artifactId="guava" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-android</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.google.protobuf" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.jcraft" artifactId="jzlib" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-kohsuke-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.fifesoft" artifactId="languagesupport" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 3.4.0, Fifesoft LanguageSupport requires Java 11.
        We cannot upgrade past 3.3.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!3\.3\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.miglayout" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 11, MigLayout requires Java 11.
        We cannot upgrade past 5.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!5\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.squareup.okhttp3" artifactId="okhttp" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)[-\.]?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="com.zeroc" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        ZeroC Ice v3.7.x breaks backwards compatibility with v3.6.x,
        such that OMERO does not function correctly.
        -->
        <ignoreVersion type="regex">^(?!3\.6\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="commons-beanutils" artifactId="commons-beanutils" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">[0-9]{8}.*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="commons-cli" artifactId="commons-cli" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion>20040117.000000</ignoreVersion>
        <ignoreVersion type="regex">.*-pre[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="commons-codec" artifactId="commons-codec" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">[0-9]{8}.*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="commons-collections" artifactId="commons-collections" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">[0-9]{8}.*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="commons-io" artifactId="commons-io" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">[0-9]{8}.*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="commons-lang" artifactId="commons-lang" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">[0-9]{8}.*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="commons-logging" artifactId="commons-logging" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-does-not-exist</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="hsqldb" artifactId="hsqldb" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        hsqldb v1.8.1.x does not seem to work with OMERO. Stick with 1.8.0.x.
        -->
        <ignoreVersion type="regex">^(?!1\.8\.0\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="javax.enterprise" artifactId="cdi-api" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*[\.-](Alpha|Beta|CR|EDR|PFD|PRD)([0-9]+(\.[0-9]+)*[a-z]?)?</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="jline" artifactId="jline" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*\.M[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="junit" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="mpicbg" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">[0-9]{8}</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="ome" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-m[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="omero" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-m[0-9]+-.*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.apache.groovy" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
        <!--
        As of version 5, Groovy requires Java 11.
        We cannot upgrade past 4.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!4\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.apache.jackrabbit" artifactId="jackrabbit-webdav" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 2.21.23, Jackrabbit WebDAV requires Java 11.
        We cannot upgrade past 2.21.22 while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!2\.21\.22).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.apache.logging.log4j" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.apache.maven" artifactId="maven-core" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.eclipse.collections" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*\.M[0-9]+</ignoreVersion>
        <!--
        As of version 12, Eclipse Collections requires Java 11.
        We cannot upgrade past 11.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!11\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.eclipse.jetty" artifactId="jetty-*" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 11, Jetty requires Java 11.
        We cannot upgrade past 9.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!9\.).*</ignoreVersion>
        <ignoreVersion type="regex">.*[-\.](alpha|beta|rc)-?[0-9]+</ignoreVersion>
        <ignoreVersion type="regex">.*\.RC[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.ejml" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 1.42, EJML requires Java 11.
        We cannot upgrade past 1.41 while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!1\.41).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.janelia" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.janelia.saalfeldlab" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.jetbrains.kotlin" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(Beta|RC)[0-9]*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.jgrapht" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 1.5, JGraphT requires Java 11.
        We cannot upgrade past 1.4.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!1\.4\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.jmockit" artifactId="jmockit" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 1.50, JMockit requires Java 17.
        We cannot upgrade past 1.49 while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!1\.49).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.morphonets" artifactId="SNT" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-pre.*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.ojalgo" artifactId="ojalgo" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 52.0.0, ojAlgo requires Java 11.
        We cannot upgrade past 51.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!51\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.openmicroscopy" artifactId="omero-gateway" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 5.10.0, OMERO Gateway requires Java 11.
        We cannot upgrade past 5.9.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!5\.9\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.junit.jupiter" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc|RC|M)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.junit.vintage" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc|RC|M)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.mockito" artifactId="mockito-core" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        As of version 5, Mockito requires Java 11.
        We cannot upgrade past 4.x while we still support Java 8.
        -->
        <ignoreVersion type="regex">^(?!4\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.openjfx" artifactId="javafx-*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-ea.*</ignoreVersion>
        <!--
        As of version 24, OpenJFX requires Java 22.
        We cannot upgrade past 23.x while we still support Java 21.
        -->
        <ignoreVersion type="regex">^(?!23\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.openmicroscopy" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-m[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.slf4j" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.springframework" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <!--
        Although version 5.3.18 is the last version to support Java 8,
        3.2.9.RELEASE is the last version to depend properly on
        aopalliance:aopalliance, rather than including org.aopalliance
        classes unshadowed!
        -->
        <ignoreVersion type="regex">^(?!3\.2\.9\.).*</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="org.tensorflow" artifactId="*" comparisonMethod="maven">
      <ignoreVersions>
        <ignoreVersion type="regex">.*-(alpha|beta|rc)-?[0-9]+</ignoreVersion>
      </ignoreVersions>
    </rule>
    <rule groupId="sc.fiji" artifactId="3D_Objects_Counter" comparisonMethod="maven">
      <ignoreVersions>
        <!-- Ignore jitpack-built tags in favor of properly released binaries. -->
        <ignoreVersion type="regex">3D_Objects_Counter-.*</ignoreVersion>
      </ignoreVersions>
    </rule>
  </rules>
</ruleset>
